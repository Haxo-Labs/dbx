version: "3.8"

services:
  # Redis service
  redis:
    image: redis:7-alpine
    container_name: dbx-redis-test
    ports:
      - "6380:6379"
    volumes:
      - redis_data_test:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - dbx-network-test

  # DBX API service
  dbx-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dbx-api-test
    ports:
      - "3001:3000"
    environment:
      # Database configuration
      - DATABASE_URL=redis://redis:6379
      - DATABASE_TYPE=redis

      # Server configuration
      - HOST=0.0.0.0
      - PORT=3000
      - POOL_SIZE=10
      - LOG_LEVEL=INFO
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/redis/admin/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - dbx-network-test
    restart: unless-stopped

  # Redis Commander for web-based Redis management
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: dbx-redis-commander-test
    ports:
      - "8082:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
    depends_on:
      - redis
    networks:
      - dbx-network-test

volumes:
  redis_data_test:
    driver: local

networks:
  dbx-network-test:
    driver: bridge
