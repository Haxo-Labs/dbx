name: DBX Crates Tests

on:
  push:
    branches: [master]
    paths:
      - "crates/**"
      - "Cargo.toml"
      - "Cargo.lock"
      - ".github/workflows/crates-tests.yml"
  pull_request:
    branches: [master]
    paths:
      - "crates/**"
      - "Cargo.toml"
      - "Cargo.lock"
      - ".github/workflows/crates-tests.yml"

env:
  CARGO_TERM_COLOR: always

jobs:
  crates-test:
    name: DBX Crates Test Suite
    runs-on: ubuntu-latest

    strategy:
      matrix:
        rust: [stable, beta]
        features: [default, "async", "connection-pool", "async,connection-pool"]

    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt, clippy

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ matrix.rust }}-${{ matrix.features }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ matrix.rust }}-${{ matrix.features }}-
            ${{ runner.os }}-cargo-${{ matrix.rust }}-
            ${{ runner.os }}-cargo-

      - name: Check formatting
        if: matrix.rust == 'stable'
        run: cargo fmt --all -- --check

      - name: Run clippy
        if: matrix.rust == 'stable'
        run: cargo clippy -p dbx-crates --features "${{ matrix.features }}" -- -D warnings

      - name: Build crates package
        run: cargo build -p dbx-crates --features "${{ matrix.features }}" --verbose

      - name: Run unit tests
        run: cargo test -p dbx-crates --features "${{ matrix.features }}" --verbose --lib
        env:
          REDIS_URL: redis://localhost:6379

      - name: Run doc tests
        if: matrix.rust == 'stable'
        run: cargo test -p dbx-crates --features "${{ matrix.features }}" --verbose --doc
        env:
          REDIS_URL: redis://localhost:6379

  crates-security:
    name: Crates Security Audit
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install cargo-audit
        run: cargo install --locked cargo-audit

      - name: Run security audit for crates
        run: cargo audit -p dbx-crates

      - name: Check for vulnerabilities in crates dependencies
        run: cargo audit -p dbx-crates --deny warnings

  crates-coverage:
    name: Crates Code Coverage
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: Generate crates code coverage
        run: cargo llvm-cov -p dbx-crates --all-features --lcov --output-path crates-lcov.info
        env:
          REDIS_URL: redis://localhost:6379

      - name: Upload crates coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: crates-lcov.info
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

  crates-benchmark:
    name: Crates Performance Benchmarks
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Run crates benchmarks
        run: cargo bench -p dbx-crates --all-features
        env:
          REDIS_URL: redis://localhost:6379

      - name: Store crates benchmark results
        uses: benchmark-action/github-action-benchmark@v1
        with:
          tool: "cargo"
          output-file-path: target/criterion/reports/crates-benchmark.json
          github-token: ${{ secrets.GITHUB_TOKEN }}
          auto-push: true

  crates-publish-check:
    name: Crates Publish Check
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Check if crates can be published
        run: cargo package -p dbx-crates --allow-dirty

      - name: Verify crates package
        run: cargo verify-project -p dbx-crates

  crates-docs:
    name: Crates Documentation
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Build crates documentation
        run: cargo doc -p dbx-crates --all-features --no-deps

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == 'refs/heads/main'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./target/doc/dbx_crates
          destination_dir: crates
