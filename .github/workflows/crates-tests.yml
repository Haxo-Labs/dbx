name: DBX Crates Tests

on:
  push:
    branches: [master]
    paths:
      - "crates/**"
      - "Cargo.toml"
      - "Cargo.lock"
      - ".github/workflows/crates-tests.yml"
  pull_request:
    branches: [master]
    paths:
      - "crates/**"
      - "Cargo.toml"
      - "Cargo.lock"
      - ".github/workflows/crates-tests.yml"

env:
  CARGO_TERM_COLOR: always

jobs:
  crates-test:
    name: DBX Crates Test Suite
    runs-on: ubuntu-latest

    strategy:
      matrix:
        rust: [stable]
        features: [default, "async", "connection-pool", "async,connection-pool"]

    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt, clippy

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ matrix.rust }}-${{ matrix.features }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ matrix.rust }}-${{ matrix.features }}-
            ${{ runner.os }}-cargo-${{ matrix.rust }}-
            ${{ runner.os }}-cargo-

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Run clippy
        run: cargo clippy -p dbx-crates --features "${{ matrix.features }}" -- -D warnings

      - name: Build crates package
        run: cargo build -p dbx-crates --features "${{ matrix.features }}" --verbose

      - name: Run unit tests
        run: cargo test -p dbx-crates --features "${{ matrix.features }}" --verbose --lib
        env:
          REDIS_URL: redis://localhost:6379

      - name: Run doc tests
        run: cargo test -p dbx-crates --features "${{ matrix.features }}" --verbose --doc
        env:
          REDIS_URL: redis://localhost:6379

  crates-basic-check:
    name: Crates Basic Checks
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Check if crates compile
        run: cargo check -p dbx-crates --all-features

      - name: Build crates documentation
        run: cargo doc -p dbx-crates --all-features --no-deps

      - name: Check crates package
        run: cargo package -p dbx-crates --allow-dirty
